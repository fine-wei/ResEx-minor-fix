<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ImageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ImageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABu
        BgAAAk1TRnQBSQFMAgEBAgEAARQBAAEUAQABEAEAARABAAT/AREBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEQBgABCLIAAZYBSgEsARkBLAEZASwBGQEsARkBLAEZASwBGQEsARkBLAEZASwBGWwA
        AZYBSgHfAnsBawF8AWsBWwFnATsBYwE7AV8BGwFbAbgBUgEsAR1MAAELAU4BSQExAUgBMQFIATEBSAEx
        ASgBLQEoAS0BKAEtAScBLQEnAS0BJwEpAQcBKQEHASkBBwEpAQcBKQIAAZcBSgHfAXsB3wF7Ad8BdwG/
        AXMBvwFzAZ4BbwHqAUkBaQE1AUgBLQEoAS0BBwEpAQcBKQHmASgB5gEkQgABKwFSAdwBfwHcAX8B3AF7
        AdsBewG7AXsBugF7AboBewG6AXsBuQF7AbkBewG5AXsBuQF7AbkBewEHASkCAAG3AU4B/wF/ASwBGQH/
        AXsBLAEZAd8BdwEsARkBCwFOAfgBYwFzAVMBDQFDAagBLgHnASEBzwEtAQYBJUIAASwBUgHdAX8BeAFS
        ARABAAEQAQAB3AF7ARABAAEQAQABtwFaAboBewF2AU4BEAEAAbcBVgG5AXsBJwEtAgABuAFOAf8BfwH/
        AX8B/wF/Af8BewHfAXsB3wF3ASwBUgHIAS4BtwFjAVEBTwHmASEBdAFKAY4BKQEHASlCAAFNAVYB/gF/
        ARABAAHdAX8BEAEAAdwBfwEQAQAB2wF7ARABAAG7AXsBEAEAAboBewEQAQABuQF7ASgBLQIAAdgBUgH/
        AX8BLAEZAf8BfwEsARkB3wF7ASwBGQFtAVYBnwFvAagBLgHnASEBdwFGATUBOgG7AUYBJwEpQgABbQFW
        Af4BfwH+AX8BEAEAARABAAHdAX8BEAEAAdwBewEQAQAB2wF7ARABAAG6AXsBugF7AboBewFIATECAAHZ
        AVIB/wF/Af8BfwH/AX8B/wF/Af8BfwH/AXsBbQFaAd4BdwGeAW8BXgFnAToBbwEOAWIBHQFbASgBMUIA
        AW0BWgH/AX8BEAEAAf4BfwEQAQAB3QF/ARABAAHdAX8BEAEAAdwBewEQAQABuwF7ARABAAG6AXsBSQEx
        AgABOwFfARoBXwH5AVoB2QFWAbgBUgG4AU4BlwFKAY8BXgHfAXsB3wF3Ab8BcwFOAXIBSAF2AS4BYgFI
        ATFCAAGOAVoB/wF/ATwBZwEQAQABOwFnAf4BfwEQAQABEAEAAdkBWgHcAX8BeAFSARABAAG4AVoBuwF7
        AWkBNQYAAbgBTgG6AXcBugF3AbsBdwG6AXcBrwFeAf8BfwH/AXsB3wF7AVkBewFvAXIBWwFvAWkBNUIA
        AY4BXgH/AX8B/wF/Af8BfwH/AX8B/gF/ARABAAH+AX8B/QF/Ad0BfwHcAX8B3AF/AdwBewHbAXsBagE1
        BgAB2QFSAboBdwG7AXcBuwF3AboBdwHQAWIBrwFiAY4BXgFuAVoBTQFWASwBUgELAU4B6gFJQgABrwFe
        Af8BfwH/AX8B/wF/Af8BfwH/AX8BEAEAAf4BfwH+AX8B/gF/Ad0BfwHdAX8B3AF/AdwBewGKATkGAAHZ
        AVYBuwF3AbsBdwG7AXcBuwF3AboBdwG7AXcBugF3AboBdwEsARlIAAGvAWIB/wF/Af8BfwH/AX8B/wF/
        Af8BfwH/AX8B/wF/Af4BfwH+AX8B/gF/Ad0BfwHdAX8B3AF/AasBPQYAAR8BUwH/AUoB3wFGAb8BPgF/
        ATYBXwEuAR0BKgH7ASUBuQEdAZYBHUgAAc8BYgGvAWIBrwFeAa8BXgGOAV4BjgFeAY4BWgFtAVoBbQFa
        AU0BVgFMAVYBTAFSASwBUgErAU4BCwFOBgAB/wFOAR8BUwEfAU8B/wFOAf8BSgHfAUYB3wFGAb8BQgFe
        ATIBmQEZbAAB/wFOAf8BSgHfAUIBvwE6AX8BNgFfATIBPgEuAR0BKgH7ASUB2QEhyAABQgFNAT4HAAE+
        AwABKAMAAUADAAEQAwABAQEAAQEFAAGAFwAD/wEABP8EAAL/AQABPwQAAv8BAAE/BQABAQEAAQEFAAEB
        AQABAQUAAQEBAAEBBQABAQEAAQEFAAEBAQABAQUAAQEBAAEBBQABAQHAAQEFAAEBAcABAQUAAQEBwAEP
        BQABAQHAAQ8FAAEBAcABDwQAAv8BwAEPBAAE/wQACw==
</value>
  </data>
</root>